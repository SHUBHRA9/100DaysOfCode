//Day 80
//Problem : Balance a Binary Search Tree
//Question Link : https://leetcode.com/problems/balance-a-binary-search-tree/description/
//Coding :

class Solution {
    public TreeNode balanceBST(TreeNode root) {
        List<TreeNode> ls=new ArrayList<>();
        inorder(root,ls);
        return construct(ls,0,ls.size()-1);
    }
    public void inorder(TreeNode root,List<TreeNode> ls){
        if(root==null){
            return;
        }
        inorder(root.left,ls);
        ls.add(root);
        inorder(root.right,ls);
    }
    public TreeNode construct(List<TreeNode> ls,int si,int ei){
        if(si>ei)
            return null;
        int mid=(si+ei)/2;
        TreeNode root=ls.get(mid);
        root.left=construct(ls,si,mid-1);
        root.right=construct(ls,mid+1,ei);
        return root;
    }
}